{ storage
    (pair (address %owner)
          (option %owner_candidate address)
          (int %roles_tracker)
          (int %bearers_tracker)
          (big_map %user_roles (pair address nat) nat)
          (pair %bearers
             (big_map %values address (pair (nat %index) (nat %value)))
             (big_map %keys nat address)
             (nat %size))
          (pair %roles
             (big_map %values nat (pair (nat %index) (nat %value)))
             (big_map %keys nat nat)
             (nat %size))) ;
  parameter
    (or (or (address %declare_ownership) (unit %claim_ownership))
        (or (or (nat %addRole) (nat %removeRole))
            (or (pair %addBearer (address %userAddress) (nat %userRole))
                (pair %removeBearer (address %userAddress) (nat %userRole))))) ;
  code { LAMBDA
           (pair (big_map (pair address nat) nat)
                 (pair (big_map nat (pair nat nat)) (big_map nat nat) nat)
                 address)
           nat
           { UNPAIR 3 ;
             PUSH unit Unit ;
             PUSH nat 0 ;
             DUP 4 ;
             DUP ;
             GET 4 ;
             PUSH nat 1 ;
             DUP 2 ;
             DUP 2 ;
             COMPARE ;
             LE ;
             LOOP { DUP 3 ;
                    GET 3 ;
                    DUP 2 ;
                    GET ;
                    IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                    DUP 4 ;
                    GET 1 ;
                    DUP 2 ;
                    GET ;
                    IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                    CDR ;
                    DUP 8 ;
                    DUP 3 ;
                    DUP 12 ;
                    PAIR ;
                    MEM ;
                    IF { PUSH nat 1 ; DUP 7 ; ADD ; DIP 1 { DIG 5 ; DROP 1 } ; DUG 5 } {} ;
                    DROP 2 ;
                    PUSH nat 1 ;
                    DUP 2 ;
                    ADD ;
                    SWAP ;
                    DROP 1 ;
                    DUP 2 ;
                    DUP 2 ;
                    COMPARE ;
                    LE } ;
             DROP 3 ;
             DUP ;
             DIP 1 { SWAP ; DROP 1 } ;
             SWAP ;
             DROP 1 ;
             DUG 3 ;
             DROP 3 } ;
         SWAP ;
         UNPAIR ;
         DIP 1 { UNPAIR 7 } ;
         IF_LEFT
           { IF_LEFT
               { DUP 2 ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                 DUP ;
                 SOME ;
                 DIP 1 { DIG 2 ; DROP 1 } ;
                 DUG 2 ;
                 DROP 1 ;
                 PAIR 7 ;
                 NIL operation ;
                 PAIR }
               { DROP 1 ;
                 PUSH mutez 0 ;
                 AMOUNT ;
                 COMPARE ;
                 EQ ;
                 NOT ;
                 IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                 DUP 2 ;
                 IF_NONE
                   { PUSH bool False }
                   { SENDER ; DUP 2 ; COMPARE ; EQ ; SWAP ; DROP 1 } ;
                 NOT ;
                 IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                 SENDER ;
                 SWAP ;
                 DROP 1 ;
                 NONE address ;
                 DIP 1 { SWAP ; DROP 1 } ;
                 SWAP ;
                 PAIR 7 ;
                 NIL operation ;
                 PAIR } }
           { IF_LEFT
               { IF_LEFT
                   { DUP 2 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                     DUP 8 ;
                     GET 1 ;
                     DUP 2 ;
                     MEM ;
                     IF { PUSH string "ROLE_EXIST" ; FAILWITH } {} ;
                     PUSH int 100 ;
                     DUP 5 ;
                     COMPARE ;
                     LT ;
                     NOT ;
                     IF { PUSH string "Maximum roles count has been reached" ; FAILWITH } {} ;
                     DUP 8 ;
                     PUSH nat 1 ;
                     DUP 2 ;
                     GET 4 ;
                     ADD ;
                     DUP 2 ;
                     GET 1 ;
                     DUP 4 ;
                     GET ;
                     IF_NONE
                       { DUP 2 ;
                         DUP 2 ;
                         UPDATE 4 ;
                         DIP 1 { SWAP ; DROP 1 } ;
                         SWAP ;
                         DUP 2 ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 5 ;
                         SOME ;
                         DUP 5 ;
                         GET 4 ;
                         UPDATE ;
                         UPDATE 3 ;
                         DIP 1 { SWAP ; DROP 1 } ;
                         SWAP }
                       { DUP ; GET 1 ; DIP 1 { SWAP ; DROP 1 } ; SWAP ; DROP 1 } ;
                     DUP 2 ;
                     DUP 3 ;
                     GET 1 ;
                     PUSH nat 1 ;
                     DUP 4 ;
                     PAIR ;
                     SOME ;
                     DUP 6 ;
                     UPDATE ;
                     UPDATE 1 ;
                     DIP 1 { SWAP ; DROP 1 } ;
                     SWAP ;
                     DUP 2 ;
                     DIP 1 { DIG 9 ; DROP 1 } ;
                     DUG 9 ;
                     DROP 2 ;
                     PUSH int 1 ;
                     DUP 5 ;
                     ADD ;
                     DIP 1 { DIG 3 ; DROP 1 } ;
                     DUG 3 ;
                     DROP 1 ;
                     PAIR 7 ;
                     NIL operation ;
                     PAIR }
                   { DUP 2 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                     DUP 8 ;
                     GET 1 ;
                     DUP 2 ;
                     MEM ;
                     NOT ;
                     IF { PUSH string "ROLE_NOT_EXIST" ; FAILWITH } {} ;
                     DUP 7 ;
                     DUP ;
                     GET 4 ;
                     PUSH nat 1 ;
                     DUP 2 ;
                     DUP 2 ;
                     COMPARE ;
                     LE ;
                     LOOP { DUP 3 ;
                            GET 3 ;
                            DUP 2 ;
                            GET ;
                            IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                            DUP 4 ;
                            GET 1 ;
                            DUP 2 ;
                            GET ;
                            IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                            CDR ;
                            DUP 11 ;
                            NONE nat ;
                            DUP 8 ;
                            DUP 5 ;
                            PAIR ;
                            UPDATE ;
                            DIP 1 { DIG 10 ; DROP 1 } ;
                            DUG 10 ;
                            DROP 2 ;
                            PUSH nat 1 ;
                            DUP 2 ;
                            ADD ;
                            SWAP ;
                            DROP 1 ;
                            DUP 2 ;
                            DUP 2 ;
                            COMPARE ;
                            LE } ;
                     DROP 3 ;
                     DUP 8 ;
                     DUP ;
                     GET 1 ;
                     DUP 3 ;
                     GET ;
                     IF_NONE
                       {}
                       { DUP ;
                         GET 1 ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 4 ;
                         GET 4 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         DUP 4 ;
                         GET 1 ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                         DUP 5 ;
                         DUP 6 ;
                         GET 3 ;
                         DUP 4 ;
                         SOME ;
                         DUP 6 ;
                         UPDATE ;
                         UPDATE 3 ;
                         DIP 1 { DIG 4 ; DROP 1 } ;
                         DUG 4 ;
                         DUP 5 ;
                         DUP 6 ;
                         GET 1 ;
                         DUP 3 ;
                         GET 2 ;
                         DUP 6 ;
                         PAIR ;
                         SOME ;
                         DUP 5 ;
                         UPDATE ;
                         UPDATE 1 ;
                         DIP 1 { DIG 4 ; DROP 1 } ;
                         DUG 4 ;
                         DUP 5 ;
                         DUP 6 ;
                         GET 3 ;
                         NONE nat ;
                         DUP 8 ;
                         GET 4 ;
                         UPDATE ;
                         UPDATE 3 ;
                         DIP 1 { DIG 4 ; DROP 1 } ;
                         DUG 4 ;
                         DUP 5 ;
                         PUSH nat 1 ;
                         DUP 7 ;
                         GET 4 ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH string "OPTION_IS_NONE" ; FAILWITH } {} ;
                         UPDATE 4 ;
                         DIP 1 { DIG 4 ; DROP 1 } ;
                         DUG 4 ;
                         DUP 5 ;
                         DUP 6 ;
                         GET 1 ;
                         NONE (pair nat nat) ;
                         DUP 9 ;
                         UPDATE ;
                         UPDATE 1 ;
                         DIP 1 { DIG 4 ; DROP 1 } ;
                         DUG 4 ;
                         DUP 5 ;
                         DIP 1 { DIG 12 ; DROP 1 } ;
                         DUG 12 ;
                         DROP 4 } ;
                     DROP 1 ;
                     PUSH int 1 ;
                     DUP 5 ;
                     SUB ;
                     DIP 1 { DIG 3 ; DROP 1 } ;
                     DUG 3 ;
                     DROP 1 ;
                     PAIR 7 ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { UNPAIR ;
                     SWAP ;
                     DUP 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                     DUP 9 ;
                     GET 1 ;
                     DUP 2 ;
                     MEM ;
                     NOT ;
                     IF { PUSH string "ROLE_NOT_EXIST" ; FAILWITH } {} ;
                     PUSH int 100 ;
                     DUP 7 ;
                     COMPARE ;
                     LT ;
                     NOT ;
                     IF { PUSH string "Maximum bearers count has been reached" ; FAILWITH } {} ;
                     DUP 7 ;
                     DUP 2 ;
                     DUP 4 ;
                     PAIR ;
                     MEM ;
                     IF { PUSH string "BEARER_HOLDS_ROLE" ; FAILWITH } {} ;
                     DUP 7 ;
                     PUSH nat 1 ;
                     SOME ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     UPDATE ;
                     DIP 1 { DIG 6 ; DROP 1 } ;
                     DUG 6 ;
                     DUP 8 ;
                     PUSH nat 1 ;
                     DUP 2 ;
                     GET 4 ;
                     ADD ;
                     DUP 2 ;
                     GET 1 ;
                     DUP 5 ;
                     GET ;
                     IF_NONE
                       { DUP 2 ;
                         DUP 2 ;
                         UPDATE 4 ;
                         DIP 1 { SWAP ; DROP 1 } ;
                         SWAP ;
                         DUP 2 ;
                         DUP 3 ;
                         GET 3 ;
                         DUP 6 ;
                         SOME ;
                         DUP 5 ;
                         GET 4 ;
                         UPDATE ;
                         UPDATE 3 ;
                         DIP 1 { SWAP ; DROP 1 } ;
                         SWAP }
                       { DUP ; GET 1 ; DIP 1 { SWAP ; DROP 1 } ; SWAP ; DROP 1 } ;
                     DUP 2 ;
                     DUP 3 ;
                     GET 1 ;
                     PUSH nat 1 ;
                     DUP 4 ;
                     PAIR ;
                     SOME ;
                     DUP 7 ;
                     UPDATE ;
                     UPDATE 1 ;
                     DIP 1 { SWAP ; DROP 1 } ;
                     SWAP ;
                     DUP 2 ;
                     DIP 1 { DIG 9 ; DROP 1 } ;
                     DUG 9 ;
                     DROP 2 ;
                     DUP 10 ;
                     DUP 3 ;
                     DUP 11 ;
                     PAIR ;
                     DUP 9 ;
                     PAIR ;
                     EXEC ;
                     PUSH nat 1 ;
                     DUP 2 ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH int 1 ; DUP 8 ; ADD ; DIP 1 { DIG 6 ; DROP 1 } ; DUG 6 } {} ;
                     DROP 3 ;
                     PAIR 7 ;
                     NIL operation ;
                     PAIR }
                   { UNPAIR ;
                     SWAP ;
                     DUP 3 ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "INVALID_CALLER" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     AMOUNT ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { PUSH string "NO_FUND_EXPECTED" ; FAILWITH } {} ;
                     DUP 9 ;
                     GET 1 ;
                     DUP 2 ;
                     MEM ;
                     NOT ;
                     IF { PUSH string "ROLE_NOT_EXIST" ; FAILWITH } {} ;
                     DUP 7 ;
                     DUP 2 ;
                     DUP 4 ;
                     PAIR ;
                     MEM ;
                     NOT ;
                     IF { PUSH string "BEARER_DOES_NOT_HOLD_ROLE" ; FAILWITH } {} ;
                     DUP 7 ;
                     NONE nat ;
                     DUP 3 ;
                     DUP 5 ;
                     PAIR ;
                     UPDATE ;
                     DIP 1 { DIG 6 ; DROP 1 } ;
                     DUG 6 ;
                     DUP 10 ;
                     DUP 3 ;
                     DUP 11 ;
                     PAIR ;
                     DUP 9 ;
                     PAIR ;
                     EXEC ;
                     PUSH nat 0 ;
                     DUP 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 9 ;
                          DUP ;
                          GET 1 ;
                          DUP 5 ;
                          GET ;
                          IF_NONE
                            {}
                            { DUP ;
                              GET 1 ;
                              DUP 3 ;
                              GET 3 ;
                              DUP 4 ;
                              GET 4 ;
                              GET ;
                              IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                              DUP 4 ;
                              GET 1 ;
                              DUP 2 ;
                              GET ;
                              IF_NONE { PUSH string "NOT_FOUND" ; FAILWITH } {} ;
                              DUP 5 ;
                              DUP 6 ;
                              GET 3 ;
                              DUP 4 ;
                              SOME ;
                              DUP 6 ;
                              UPDATE ;
                              UPDATE 3 ;
                              DIP 1 { DIG 4 ; DROP 1 } ;
                              DUG 4 ;
                              DUP 5 ;
                              DUP 6 ;
                              GET 1 ;
                              DUP 3 ;
                              GET 2 ;
                              DUP 6 ;
                              PAIR ;
                              SOME ;
                              DUP 5 ;
                              UPDATE ;
                              UPDATE 1 ;
                              DIP 1 { DIG 4 ; DROP 1 } ;
                              DUG 4 ;
                              DUP 5 ;
                              DUP 6 ;
                              GET 3 ;
                              NONE address ;
                              DUP 8 ;
                              GET 4 ;
                              UPDATE ;
                              UPDATE 3 ;
                              DIP 1 { DIG 4 ; DROP 1 } ;
                              DUG 4 ;
                              DUP 5 ;
                              PUSH nat 1 ;
                              DUP 7 ;
                              GET 4 ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH string "OPTION_IS_NONE" ; FAILWITH } {} ;
                              UPDATE 4 ;
                              DIP 1 { DIG 4 ; DROP 1 } ;
                              DUG 4 ;
                              DUP 5 ;
                              DUP 6 ;
                              GET 1 ;
                              NONE (pair nat nat) ;
                              DUP 11 ;
                              UPDATE ;
                              UPDATE 1 ;
                              DIP 1 { DIG 4 ; DROP 1 } ;
                              DUG 4 ;
                              DUP 5 ;
                              DIP 1 { DIG 13 ; DROP 1 } ;
                              DUG 13 ;
                              DROP 4 } ;
                          DROP 1 ;
                          PUSH int 1 ;
                          DUP 8 ;
                          SUB ;
                          DIP 1 { DIG 6 ; DROP 1 } ;
                          DUG 6 }
                        {} ;
                     DROP 3 ;
                     PAIR 7 ;
                     NIL operation ;
                     PAIR } } } ;
         DIP 1 { DROP 1 } } ;
  view "hasRole"
       (pair address nat)
       bool
       { UNPAIR ;
         DIP 1 { CDR ; CDR ; CDR ; CDR ; UNPAIR ; SWAP ; CDR } ;
         UNPAIR ;
         UNIT ;
         DUP 4 ;
         GET 1 ;
         DUP 4 ;
         MEM ;
         NOT ;
         IF { PUSH string "ROLE_NOT_EXIST" ; FAILWITH } {} ;
         PUSH nat 1 ;
         SOME ;
         DUP 6 ;
         DUP 5 ;
         DUP 5 ;
         PAIR ;
         GET ;
         COMPARE ;
         EQ ;
         IF { PUSH bool True } { PUSH bool False } ;
         SWAP ;
         DROP 1 ;
         DIP 1 { DROP 4 } } }
